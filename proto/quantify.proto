syntax = "proto3";
package quantify;

// Enums
enum GRANULARITY_TYPE{
    MINUTES = 0;
    HOURS = 1;
    DAYS = 2;
}

// Data types
message Ticker {
    string name = 1;
}

message CandleData {
    Ticker ticker = 1;
    int64 timestamp = 2; // Unix time (milliseconds)
    float open = 3;
    float close = 4;
    float high = 5;
    float low = 6;
    int64 volume = 7;
    int64 num_transactions = 8;
}

message StatusResponse {
    bool success = 1;
    optional string info = 2;
}

// Messages
message AddTickerRequest {
    Ticker ticker = 1;
}

message RemoveTickerRequest {
    Ticker ticker = 1;
}

message UpdateCandleDataRequest {
    Ticker ticker = 1;
    GRANULARITY_TYPE granularity_type = 2;
    int64 granularity_value = 3;
}

message GetCandleDataRequest {
    Ticker ticker = 1;
    GRANULARITY_TYPE granularity_type = 2;
    int64 granularity_value = 3;
}

// Response for GetCandleDataRequest
message GetCandleDataResponse {
    repeated CandleData candle_data = 1;
}

// Service
service QuantifyData {
    rpc AddTicker (AddTickerRequest) returns (StatusResponse) {};
    rpc RemoveTicker (RemoveTickerRequest) returns (StatusResponse) {};
    rpc UpdateCandleData (UpdateCandleDataRequest) returns (StatusResponse) {};
    rpc GetCandleData (GetCandleDataRequest) returns (GetCandleDataResponse) {};
}